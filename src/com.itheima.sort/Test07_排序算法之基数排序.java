package com.itheima.sort;

import java.util.Arrays;

public class Test07_排序算法之基数排序 {

	public static void main(String[] args) {
		int[] arr = new int[] {23,6,189,45,9,287,56,1,789,34,65,652,5};
		radixSort(arr);
		System.out.println(Arrays.toString(arr));
	}

	public static void radixSort(int[] arr) {
		int max = Integer.MIN_VALUE;                         //存数组中最大的数
		for (int i = 0; i < arr.length; i++) {
			if(arr[i]>max) {
				max = arr[i];
			}
		}
		
		int maxLength = (max + "").length();                 //计算最大数字是几位数
		int[][] temp = new int[10][arr.length];              //用于临时存储数据的数组
		int[] counts = new int[10];                          //用于记录在temp中相应的数组中存放的数字的数量
		for (int i = 0,n = 1; i < maxLength; i++,n*=10) {    //根据最大长度的数决定比较的次数
			for (int j = 0; j < arr.length; j++) {
				int ys = arr[j]/n%10;                        //计算余数
				temp[ys][counts[ys]] = arr[j];               //把当前遍历的数据存入指定的数组中
				counts[ys]++;                                //记录数量
			}
			int index = 0;                                   //记录取的元素需要放的位置
			for (int k = 0; k < counts.length; k++) {        //把数字取出来
				if(counts[k] != 0) {                         //当前余数记录的数量不为0
					for (int l = 0; l < counts[k]; l++) {    //循环取出元素
						arr[index] = temp[k][l];             //取出元素
						index++;                             //记录下一个位置
					}
					counts[k] = 0;                           //把数量置为0
				}
			}
		}
	}

}
